name: Update Meals

on:
  schedule:
    # Run every 12 hours at 5 minutes past the hour
    - cron: "5 */12 * * *"
  workflow_dispatch: # Allow manual runs

permissions:
  contents: read # Changed from write since we're not modifying repo

jobs:
  update-meals:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run meal planning script
        env:
          ICAL_URL: ${{ secrets.ICAL_URL }}
        run: python app.py

      - name: Update or Create Gist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIST_ID: ${{ vars.GIST_ID }} # Optional: store existing gist ID as repository variable
        run: |
          # Read the generated JSON file
          MEALS_CONTENT=$(cat meals.json)

          # Check if GIST_ID is set and gist exists
          if [ -n "$GIST_ID" ] && curl -s -H "Authorization: token $GITHUB_TOKEN" \
             "https://api.github.com/gists/$GIST_ID" > /dev/null 2>&1; then
            echo "Updating existing gist: $GIST_ID"
            # Update existing gist
            curl -X PATCH \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/gists/$GIST_ID" \
              -d "{
                \"files\": {
                  \"meals.json\": {
                    \"content\": $(echo "$MEALS_CONTENT" | jq -R -s .)
                  }
                }
              }"
          else
            echo "Creating new gist"
            # Create new gist
            RESPONSE=$(curl -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/gists" \
              -d "{
                \"description\": \"Meal planning data - Updated every 12 hours\",
                \"public\": true,
                \"files\": {
                  \"meals.json\": {
                    \"content\": $(echo "$MEALS_CONTENT" | jq -R -s .)
                  }
                }
              }")
            
            # Extract and display the new gist ID and URL
            NEW_GIST_ID=$(echo "$RESPONSE" | jq -r '.id')
            GIST_URL=$(echo "$RESPONSE" | jq -r '.html_url')
            RAW_URL=$(echo "$RESPONSE" | jq -r '.files."meals.json".raw_url')
            
            echo "Created new gist!"
            echo "Gist ID: $NEW_GIST_ID"
            echo "Gist URL: $GIST_URL" 
            echo "Raw JSON URL: $RAW_URL"
            echo "Save the Gist ID as a repository variable named 'GIST_ID' for future updates"
          fi
